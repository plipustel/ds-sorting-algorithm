{"ast":null,"code":"var _jsxFileName = \"/Users/plipustelaumbanua/Thecoder/ReactJS/react-sorting-algorithm/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, StyleSheet } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const unsortedData = [9, 1, 3, 2, 5, 6, 9, 4, 5, 7, 8];\n  const [multipleTwo, setMultipleTwo] = useState([...unsortedData]);\n  const [bubbleSortData, setBubbleSortData] = useState([...unsortedData]);\n  const ResetNumbers = () => {\n    setMultipleTwo([...unsortedData]);\n    setBubbleSortData([...unsortedData]);\n  };\n  const MultipleByTwo = () => {\n    let arr = [];\n    for (let i = 0; i <= multipleTwo.length - 1; i++) {\n      arr.push(multipleTwo[i] * 2);\n    }\n    setMultipleTwo(arr);\n  };\n\n  /* 1. Bubble Sort */\n  const BubbleSort = () => {\n    const newSortedData = [...bubbleSortData];\n    for (let i = 0; i <= newSortedData.length - 1; i++) {\n      for (let j = 0; j <= newSortedData.length - 1; j++) {\n        if (newSortedData[j] > newSortedData[j + 1]) {\n          let temp = newSortedData[j]; //hold for temporary the bigger data, to swap it latter\n          newSortedData[j] = newSortedData[j + 1];\n          newSortedData[j + 1] = temp;\n        }\n      }\n    }\n    setBubbleSortData(newSortedData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Unsorted Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"numbers\",\n      children: unsortedData.map((rows, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"items\",\n        children: rows\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"1.Multiple by Two\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: MultipleByTwo,\n      children: \"Multiple by Two (arr * 2)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: ResetNumbers,\n      children: \"Reset All Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"numbers\",\n      children: multipleTwo.map((rows, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"items\",\n        children: rows\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"2. Bubble Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: BubbleSort,\n      children: \"Bubble Sort\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"numbers\",\n      children: bubbleSortData.map((rows, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"items\",\n        children: rows\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FJ5hkTXk2DPQrH/wqTo5MlPl3T4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","StyleSheet","jsxDEV","_jsxDEV","App","_s","unsortedData","multipleTwo","setMultipleTwo","bubbleSortData","setBubbleSortData","ResetNumbers","MultipleByTwo","arr","i","length","push","BubbleSort","newSortedData","j","temp","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","rows","index","onClick","_c","$RefreshReg$"],"sources":["/Users/plipustelaumbanua/Thecoder/ReactJS/react-sorting-algorithm/src/App.js"],"sourcesContent":["import React, { useState, StyleSheet } from 'react';\nimport './App.css'\n\nfunction App() {\n  const unsortedData = [9, 1, 3, 2, 5, 6, 9, 4, 5, 7, 8];\n\n  const [multipleTwo, setMultipleTwo] = useState([...unsortedData]);\n  const [bubbleSortData, setBubbleSortData] = useState([...unsortedData]);\n  \n  const ResetNumbers = () => {\n    setMultipleTwo([...unsortedData]);\n    setBubbleSortData([...unsortedData]);\n  }\n\n  const MultipleByTwo = () => {\n    let arr = [];\n    for(let i = 0; i <= multipleTwo.length - 1; i++) {\n      arr.push(multipleTwo[i] * 2);\n    }\n    setMultipleTwo(arr)\n  }\n\n  /* 1. Bubble Sort */\n  const BubbleSort = () => {\n    const newSortedData = [...bubbleSortData];\n\n    for(let i = 0; i <= newSortedData.length - 1; i++){\n      for( let j = 0; j <= newSortedData.length - 1; j++) {\n        if(newSortedData[j] > newSortedData[j + 1]) {\n          let temp = newSortedData[j]; //hold for temporary the bigger data, to swap it latter\n          newSortedData[j] = newSortedData[j + 1];\n          newSortedData[j + 1] = temp;\n        }\n      }\n    }\n    setBubbleSortData(newSortedData);\n  }\n\n  return (\n\n    <div>\n      <h3>Unsorted Data</h3>\n      <ul className='numbers'>\n        {unsortedData.map((rows, index) => (\n          <li className='items' key={index}>{rows}</li>\n        ))}\n      </ul>\n      \n      <h3>1.Multiple by Two</h3>\n      <button onClick={MultipleByTwo}>Multiple by Two (arr * 2)</button>\n      <button onClick={ResetNumbers}>Reset All Numbers</button>\n      <ul className='numbers'>\n        {multipleTwo.map((rows, index) => (\n          <li className='items' key={index}>{rows}</li>\n        ))}\n      </ul>\n\n      <h3>2. Bubble Sort</h3>\n      <button onClick={BubbleSort}>Bubble Sort</button>\n      <ul className='numbers'>\n        {bubbleSortData.map((rows, index) => (\n          <li className='items' key={index}>{rows}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}